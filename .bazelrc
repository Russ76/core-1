# As Cartographer images need to be build with optimizations enabled, we build
# the whole tree optimized by default. If you want to build a sub-tree in a
# different configuration you can specify `-c fastbuild` or `-c dbg` on the
# command line.
build -c opt

# Print output when tests fail. No idea why this isn't the default.
test --test_output=errors
# Don't run integration tests and tests that need docker by default
test --test_tag_filters="-external,-requires-docker"

# Workaround https://github.com/bazelbuild/bazel/issues/3236
build --sandbox_tmpfs_path=/tmp

# This uses fixed values of PATH, LD_LIBRARY_PATH and TMPDIR. It allows cache
# hits between CLI and IntelliJ builds, and will also be useful if we switch to
# a shared cache.
build --experimental_strict_action_env

# Depending on how many machines are in the remote execution instance, setting
# this higher can make builds faster by allowing more jobs to run in parallel.
# Setting it too high can result in jobs that timeout, however, while waiting
# for a remote machine to execute them.
build:remote --jobs=48

build:remote --host_crosstool_top=@llvm_toolchain//:toolchain
build:remote --crosstool_top=@llvm_toolchain//:toolchain

# Platform flags:
# The toolchain container used for execution is defined in the target indicated
# by "extra_execution_platforms", "host_platform" and "platforms".
# More about platforms: https://docs.bazel.build/versions/master/platforms.html
build:remote --extra_execution_platforms=//configs/config:platform
build:remote --host_platform=//configs/config:platform
build:remote --platforms=//configs/config:platform
build:remote --java_runtime_version=rbe_jdk
build:remote --tool_java_runtime_version=rbe_jdk
build:remote --extra_toolchains=//configs/java:all

# Starting with Bazel 0.27.0 strategies do not need to be explicitly
# defined. See https://github.com/bazelbuild/bazel/issues/7480
build:remote --define=EXECUTOR=remote

# Enable remote execution so actions are performed on the remote systems.
build:remote --remote_executor=grpcs://us-east1-remotebuildexecution.googleapis.com

# Enforce stricter environment rules, which eliminates some non-hermetic
# behavior and therefore improves both the remote cache hit rate and the
# correctness and repeatability of the build.
build:remote --incompatible_strict_action_env=true

# Set a higher timeout value, just in case.
build:remote --remote_timeout=3600

# Enable authentication. This will pick up application default credentials by
# default. You can use --google_credentials=some_file.json to use a service
# account credential instead.
build:remote --google_default_credentials=true
