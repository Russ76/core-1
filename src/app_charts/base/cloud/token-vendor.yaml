apiVersion: v1
kind: ServiceAccount
metadata:
  name: token-vendor
  annotations:
    iam.gke.io/gcp-service-account: "token-vendor@{{ .Values.project }}.iam.gserviceaccount.com"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: token-vendor-key-mngmt
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: token-vendor-key-mngmt-binding
subjects:
- kind: ServiceAccount
  name: token-vendor
roleRef:
  kind: Role
  name: token-vendor-key-mngmt
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: token-vendor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: token-vendor
  template:
    metadata:
      labels:
        app: token-vendor
    spec:
      containers:
      - name: token-vendor
{{- if .Values.use_go_token_vendor }}
        image: {{ .Values.registry }}{{ .Values.images.token_vendor_go }}
{{- else }}
        image: {{ .Values.registry }}{{ .Values.images.token_vendor }}
{{- end }}
        ports:
        - name: token-vendor
          containerPort: 9090
        args: [
          "--project", "{{ .Values.project }}",
          "--region", "{{ .Values.region }}",
          "--registry", "cloud-robotics",
          "--accepted_audience", "https://{{ .Values.domain }}/apis/core.token-vendor/v1/token.oauth2",
          "--service_account", "robot-service",
          # This scope is for token vendor and for access to GCS/GCR.
          "--scope", "https://www.googleapis.com/auth/cloud-platform",
          # This scope allows GKE RBAC policy bindings to refer to service accounts by email.
          # https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control#forbidden_error_for_service_accounts_on_vm_instances
          "--scope", "https://www.googleapis.com/auth/userinfo.email",
{{- if not .Values.use_go_token_vendor }}
{{- if eq .Values.deploy_environment "GCP-testing" }}
          "--key-store", "IN_MEMORY",
{{- else }}
          "--key-store", "CLOUD_IOT",
{{- end }}
{{- end }}
        ]
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
          initialDelaySeconds: 15
      securityContext:
        runAsUser: 65532
        runAsGroup: 65532
      tolerations:
        - key: "workload-identity"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      nodeSelector:
        iam.gke.io/gke-metadata-server-enabled: "true"
      serviceAccountName: token-vendor
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: token-vendor
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - {{ .Values.domain }}
  rules:
  - host: {{ .Values.domain }}
    http:
      paths:
      - path: "/apis/core.token-vendor/v1/token.verify"
        pathType: Prefix
        backend:
          service:
            name: token-vendor
            port:
              name: token-vendor
      - path: "/apis/core.token-vendor/v1/token.oauth2"
        pathType: Prefix
        backend:
          service:
            name: token-vendor
            port:
              name: token-vendor
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-key-manager
  annotations:
    nginx.ingress.kubernetes.io/auth-url: "http://token-vendor.default.svc.cluster.local/apis/core.token-vendor/v1/token.verify?robots=false"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - {{ .Values.domain }}
  rules:
  - host: {{ .Values.domain }}
    http:
      paths:
      - path: "/apis/core.token-vendor/v1/public-key.publish"
        pathType: Prefix
        backend:
          service:
            name: token-vendor
            port:
              name: token-vendor
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-key-access
  annotations:
    nginx.ingress.kubernetes.io/auth-url: "http://token-vendor.default.svc.cluster.local/apis/core.token-vendor/v1/token.verify?robots=true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - {{ .Values.domain }}
  rules:
  - host: {{ .Values.domain }}
    http:
      paths:
      - path: "/apis/core.token-vendor/v1/public-key.read"
        pathType: Prefix
        backend:
          service:
            name: token-vendor
            port:
              name: token-vendor
---
apiVersion: v1
kind: Service
metadata:
  name: token-vendor
  annotations:
spec:
  ports:
  - port: 80
    targetPort: 9090
    protocol: TCP
    name: token-vendor
  selector:
    app: token-vendor
  type: ClusterIP
