package(default_visibility = ["//visibility:public"])

load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "github.com/googlecloudrobotics/core/src/go/cmd/chart-assignment-controller",
    visibility = ["//visibility:private"],
    deps = [
        "//src/go/pkg/apis/apps/v1alpha1:go_default_library",
        "//src/go/pkg/controller/chartassignment:go_default_library",
        "@com_github_pkg_errors//:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime:go_default_library",
        "@io_k8s_client_go//kubernetes/scheme:go_default_library",
        "@io_k8s_client_go//rest:go_default_library",
        "@io_k8s_sigs_controller_runtime//pkg/log:go_default_library",
        "@io_k8s_sigs_controller_runtime//pkg/log/zap:go_default_library",
        "@io_k8s_sigs_controller_runtime//pkg/manager:go_default_library",
        "@io_k8s_sigs_controller_runtime//pkg/manager/signals:go_default_library",
        "@io_opencensus_go//trace:go_default_library",
        "@io_opencensus_go_contrib_exporter_stackdriver//:go_default_library",
    ],
)

load("@io_bazel_rules_docker//container:container.bzl", "container_image")

genrule(
    name = "helm-config",
    outs = ["helm-config.tar"],
    # Note: the extra tar flags are use to make builds deterministic
    cmd = "$(location @kubernetes_helm//:helm) >/dev/null init --client-only --skip-repos " +
          "&& mkdir -p .helm && tar --owner=root --group=root --numeric-owner --mtime='2010-01-01' --create --file $@ .helm/",
    output_to_bindir = True,
    tools = ["@kubernetes_helm//:helm"],
)

container_image(
    name = "helm-image",
    base = "@cc_image_base//image",
    directory = "/home/nonroot/",
    tars = [":helm-config"],
)

load("@io_bazel_rules_docker//go:image.bzl", "go_image")

go_image(
    name = "chart-assignment-controller",
    base = ":helm-image",
    embed = [":go_default_library"],
)
